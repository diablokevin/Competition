@model Competition.EF.Models.Score


<div class="container">
    <div class="row text-center">
        <h2 class="m-auto">
            @Model.Schedule.Event.Name
        </h2>

    </div>
    <div class="row">
        <div class="col-8 text-left">
            <h4>
                <span> @Model.Schedule.Competitor.Race_num</span>
                <span> @Model.Schedule.Competitor.Name</span>
                <span>(@Model.Schedule.Competitor.StaffId)</span>
                <span> | </span>
                <span> @Model.Schedule.Competitor.Company.Name</span>
            </h4>
        </div>
        <div class="col-4 text-left">
            <h4>
                
               @Html.DevExpress().TextBoxFor(t => t.Mark,s=> {
              s.Properties.Caption = "得分";
          }).GetHtml()
             
            </h4>
        </div>
    </div>

    <div class="row"><p> </p></div>

    <div class="row">
     
        <div >
            @Html.DevExpress().ComboBoxFor(c => c.TimeConsume_minute, s =>
{

       s.Properties.Caption = "耗费时间  分";
       s.Properties.ValueType = typeof(int);
       for (int i = 0; i <= Model.Schedule.Event.TimeLimit.Minutes; i++)
       {
           s.Properties.Items.Add(i.ToString(), i);
       }

}).GetHtml()

        </div>
        <span>  </span>
        <div>
            @Html.DevExpress().ComboBoxFor(c => c.TimeConsume_second, s =>
 {

     s.Properties.Caption = "秒";
     s.Properties.ValueType = typeof(int);
     for (int i = 0; i < 60; i++)
     {
         s.Properties.Items.Add(i.ToString(), i);
     }
 }).GetHtml()

        </div>

    </div>
    <div class="row"><p> </p></div>

</div>



<div>
  
</div>

<div>
  
</div>

<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th class="col-8 text-center">
                评分细则
            </th>
            <th class="col-2 text-center">
                权重
            </th>
            <th class="col-1 text-center">
                得分
            </th>
            <th class="col-2 text-center">
                备注
            </th>
        </tr>
    </thead>
    @for (int i = 0; i < Model.ScoreDetail.Count; i++)
    {
        @Html.HiddenFor(d => d.ScoreDetail[i].Id)
        @Html.HiddenFor(d => d.ScoreDetail[i].EventCriteriaId)
        @Html.HiddenFor(d => d.ScoreDetail[i].ScoreId)

        <tr>
            <td>
                @foreach (string s in Model.ScoreDetail[i].EventCriteria.Title.Split('\n'))
                {
                    <p>@s</p>
                }
            </td>
            <td>
                @if (Model.ScoreDetail[i].EventCriteria.MaxScore != 0)
                {
                    @Html.DisplayFor(d => d.ScoreDetail[i].EventCriteria.MaxScore)
                }
                else if (Model.ScoreDetail[i].EventCriteria.MinScore != 0)
                {
                    @Html.DisplayFor(d => d.ScoreDetail[i].EventCriteria.MinScore)
                }

            </td>
            <td>
                @Html.DevExpress().ComboBoxFor(m => m.ScoreDetail[i].Mark, s =>
                {
               s.ClientVisible = Model.ScoreDetail[i].EventCriteria.MinScore != 0 || Model.ScoreDetail[i].EventCriteria.MaxScore != 0;
               //s.Properties.ClientSideEvents.ValueChanged = "function(s, e){ reCalScore()}";
               s.Properties.ClientInstanceName = string.Format("ScoreDetails{0}", i);
               s.Width = Unit.Pixel(80);
               if (Model.ScoreDetail[i].EventCriteria.MinScore < 0)
               {
                   for (double j = 0; j >= Model.ScoreDetail[i].EventCriteria.MinScore; j = j - 0.5)
                   {
                       s.Properties.Items.Add(j.ToString(), j);
                   }
               }
               else
               {
                   for (double j = 0; j <= Model.ScoreDetail[i].EventCriteria.MaxScore; j = j + 0.5)
                   {
                       s.Properties.Items.Add(j.ToString(), j);
                   }
               }

           }).GetHtml()


            </td>
            <td>
                @Html.DevExpress().MemoFor(m => m.ScoreDetail[i].Note, s =>
           {
               s.ClientVisible = Model.ScoreDetail[i].EventCriteria.MinScore != 0 || Model.ScoreDetail[i].EventCriteria.MaxScore != 0;
               s.Width = Unit.Pixel(150);
                s.Properties.Rows = 4;
           }).GetHtml()
            </td>
        </tr>

    }


</table>

<div class="row">
    <div class="col-12">
        @Html.DevExpress().MemoFor(m => m.Note, s =>
        {
            s.Properties.Caption = "备注";

            s.Width = Unit.Percentage(100);
            s.Properties.Rows = 6;
        }).GetHtml()
    </div>

</div>

<div class="row float-right">
    @Html.DevExpress().Button(btnSettings =>
        {
        btnSettings.Name = "btnUpdate";
        btnSettings.Text = "提交";
        btnSettings.ClientSideEvents.Click = "function(s, e){ ScoreGridView.UpdateEdit(); }";
        }).GetHtml()
    @Html.DevExpress().Button(btnSettings =>
    {
    btnSettings.Name = "btnCancel";
    btnSettings.Text = "取消";
    btnSettings.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
    btnSettings.ClientSideEvents.Click = "function(s, e){ ScoreGridView.CancelEdit(); }";
    }).GetHtml()
</div>




@*@Html.DevExpress().FormLayout(flSettings =>
    {
        flSettings.Name = "ScoreEditForm";
        flSettings.Width = Unit.Percentage(100);
        flSettings.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
        flSettings.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 700;
        flSettings.ColCount = 2;

        flSettings.Items.Add(i =>
        {
            i.FieldName = "ScheduleId";

            i.NestedExtension().ComboBox(s =>
            {
                s.Properties.TextField = "Subject";
                s.Properties.ValueField = "Id";
                s.Properties.ValueType = typeof(int);
                s.Properties.DataSource = ViewBag.Schedulelist;

            });
        });

        flSettings.Items.AddGroupItem(g => {

            g.ColCount = 1;

            //g.GroupBoxDecoration = GroupBoxDecoration.Box;
            g.Caption = "用时";
            // g.ShowCaption = DefaultBoolean.True;
            g.Items.Add(i => i.TimeConsume_minute, c => {
                c.Caption = "分";
                c.NestedExtension().SpinEdit(s =>
                {
                    s.Properties.NumberType = SpinEditNumberType.Integer;
                    s.Properties.MinValue = 0;
                    s.Properties.MaxValue = 59;
                });
            });
            g.Items.Add(i => i.TimeConsume_second, c =>
            {
                c.Caption = "秒";
                c.NestedExtension().SpinEdit(s =>
                {
                    s.Properties.NumberType = SpinEditNumberType.Integer;
                    s.Properties.MinValue = 0;
                    s.Properties.MaxValue = 59;
                });
            });
        });

        flSettings.Items.Add(i => i.Mark, c =>
        {

            c.NestedExtension().SpinEdit(s =>
            {
                s.Properties.NumberType = SpinEditNumberType.Float;
                s.Properties.MinValue = 0;
                s.Properties.MaxValue = 100;
            });
        });



        flSettings.Items.Add(i =>
        {
            i.ShowCaption = DefaultBoolean.False;
        }).SetNestedContent(() =>
        {
            ViewContext.Writer.Write("<div style='float:right'>");
            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnUpdate";
                btnSettings.Text = "更新";
                btnSettings.ClientSideEvents.Click = "function(s, e){ ScoreGridView.UpdateEdit(); }";
            }).Render();
            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnCancel";
                btnSettings.Text = "取消";
                btnSettings.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                btnSettings.ClientSideEvents.Click = "function(s, e){ ScoreGridView.CancelEdit(); }";
            }).Render();
            ViewContext.Writer.Write("</div>");
        });

    }).GetHtml()*@