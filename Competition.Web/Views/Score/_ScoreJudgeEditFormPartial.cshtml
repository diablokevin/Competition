@model Competition.Web.Models.ScoreDetailViewModel
@{
    Layout = "~/Views/Shared/_lightLayout.cshtml";
}

<div class="alert-danger">@ViewBag.Error</div>
<div class="container">
    <div class="row">
        <div class="col-8 text-left">
            <h3>
                <span> @Model.Score.Schedule.Competitor.Race_num</span>
                <span> @Model.Score.Schedule.Competitor.Name</span>
                <span>(@Model.Score.Schedule.Competitor.StaffId)</span>
                <span> | </span>
                <span> @Model.Score.Schedule.Competitor.Company.Name</span>
            </h3>
        </div>
        <div class="col-4 text-left">
            <h4>
                <span>得分：</span>
                <span id="ScoreSum">@Model.ScoreDetails.Sum(s => s.Mark) </span>
            </h4>
        </div>
    </div>
    <div class="=row text-left">
        <h5>
            @Model.Score.Schedule.Event.Name
        </h5>
    </div>
    <div class="row"><p> </p></div>
</div>



<script>
    
    var timescore = 0.0;

    function reCalScore() {
        var len =@Model.ScoreDetails.Count;
        var sum =Number(0);
        //js中定义用字符串拼接起来的变量名的变量  https://www.cnblogs.com/vlone/p/4602072.html
        for (i = 0; i < len; i++) {
            sum += Number(window["ScoreDetails" + i].lastSuccessValue);
        }
        sum += timescore;
        if (sum < 0) { sum = 0 };
        $("#ScoreSum").text(sum);

    }

    function CalTimeScore() {
        if (@(Model.Score.Schedule.Event.HasTimeScore?1:0)) {
            var timelimit = @Model.Score.Schedule.Event.TimeLimit.TotalSeconds;
            var min = TimeConsume_minute.lastSuccessValue;
            var sec = TimeConsume_second.lastSuccessValue;
            timescore = Math.floor((timelimit - 60 * min - sec) / 30) * 0.5;
            if (timescore < 0) { timescore = 0 }
            if (timescore > 5) { timescore=5 }
            $("#timescore").text(timescore);
            reCalScore();
        }      
    }
      
   

</script>


@using (Html.BeginForm())
{
@*<form method="post" onkeydown="if(event.keyCode==13){return false;}">*@


    @Html.Hidden("Score.ScheduleId")
    <div class="container">
        <div class="row">
            <div class="col-md-1">
                <div class="m-auto">耗费时间</div>
            </div>
           @* <input type="number" pattern="^[0-9]+\.{0,1}[0-9]{0,2}$" max="9" min="0">*@
            <div class="col-3">
                @Html.DevExpress().ComboBoxFor(m => m.Score.TimeConsume_minute, s =>
           {
               s.Properties.Caption = "分";
               s.Properties.ValueType = typeof(int);
               s.Properties.ClientInstanceName = "TimeConsume_minute";
               s.Properties.ClientSideEvents.TextChanged = "function(s, e){ CalTimeScore()}";
               for (int i = 0; i <= Model.Score.Schedule.Event.TimeLimit.Minutes; i++)
               {
                   s.Properties.Items.Add(i.ToString(), i);
               }


           }).GetHtml()

            </div>
            <div class="col-3">
                @Html.DevExpress().ComboBoxFor(m => m.Score.TimeConsume_second, s =>
           {
               s.Properties.Caption = "秒";
               s.Properties.ValueType = typeof(int);
                s.Properties.ClientInstanceName = "TimeConsume_second";
               s.Properties.ClientSideEvents.TextChanged = "function(s, e){ CalTimeScore()}";
               for (int i = 0; i < 60; i++)
               {
                   s.Properties.Items.Add(i.ToString(), i);
               }


           }).GetHtml()

            </div>
            @*<div class="col-md-3">
            @Html.DevExpress().SpinEditFor(m => m.Score.TimeConsume_minute, s =>
        {

            s.Properties.Caption = "分";
            s.Properties.NumberType = SpinEditNumberType.Integer;
            s.Properties.MinValue = 0;
            s.Properties.MaxValue = Model.Score.Schedule.Event.TimeLimit.Minutes;


        }).GetHtml()
        </div>*@
            @*<div class="col-md-3">

            @Html.DevExpress().SpinEditFor(m => m.Score.TimeConsume_second, s =>
                {
                s.Properties.Caption = "秒";
                s.Properties.NumberType = SpinEditNumberType.Integer;
                s.Properties.MinValue = 0;
                s.Properties.MaxValue = 59;

                }).GetHtml()
        </div>*@
        </div>
        <div class="row"><p> </p></div>
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th class="col-8 text-center">
                        评分细则
                    </th>
                    <th class="col-2 text-center">
                        权重
                    </th>
                    <th class="col-1 text-center">
                        得分
                    </th>
                    <th class="col-2 text-center">
                        备注
                    </th>
                </tr>
            </thead>
            @for (int i = 0; i < Model.ScoreDetails.Count; i++)
            {
                @Html.HiddenFor(d => d.ScoreDetails[i].Id)
                @Html.HiddenFor(d => d.ScoreDetails[i].EventCriteriaId)
                @Html.HiddenFor(d => d.ScoreDetails[i].ScoreId)

                <tr>
                    <td>
                        @foreach (string s in Model.ScoreDetails[i].EventCriteria.Title.Split('\n'))
                        {
                            <p>@s</p>
                        }
                    </td>
                    <td>
                        @if (Model.ScoreDetails[i].EventCriteria.MaxScore != 0)
                        {
                            @Html.DisplayFor(d => d.ScoreDetails[i].EventCriteria.MaxScore)
                        }
                        else if (Model.ScoreDetails[i].EventCriteria.MinScore != 0)
                        {
                            @Html.DisplayFor(d => d.ScoreDetails[i].EventCriteria.MinScore)
                        }

                    </td>
                    <td>
                  @Html.DevExpress().ComboBoxFor(m => m.ScoreDetails[i].Mark, s => {
                 s.ClientVisible = Model.ScoreDetails[i].EventCriteria.MinScore != 0 || Model.ScoreDetails[i].EventCriteria.MaxScore != 0;
                 s.Properties.ClientSideEvents.ValueChanged = "function(s, e){ reCalScore()}";
                 s.Properties.ClientInstanceName = string.Format("ScoreDetails{0}", i);
                 s.Width = Unit.Pixel(80);
                 if( Model.ScoreDetails[i].EventCriteria.MinScore<0)
                 {
                     for (double j = 0; j >= Model.ScoreDetails[i].EventCriteria.MinScore; j=j-0.5)
                     {
                         s.Properties.Items.Add(j.ToString(), j);
                     }
                 }
                 else
                 {
                     for (double j = 0; j <= Model.ScoreDetails[i].EventCriteria.MaxScore; j=j+0.5)
                     {
                         s.Properties.Items.Add(j.ToString(), j);
                     }
                 }

             }).GetHtml()

                                            
                    </td>
                    <td>
                        @Html.DevExpress().MemoFor(m => m.ScoreDetails[i].Note, s =>
                   {
                       s.ClientVisible = Model.ScoreDetails[i].EventCriteria.MinScore != 0 || Model.ScoreDetails[i].EventCriteria.MaxScore != 0;
                       s.Width = Unit.Pixel(150);
                        s.Properties.Rows = 4;
                   }).GetHtml()
                    </td>
                </tr>
            }
            @if(Model.Score.Schedule.Event.HasTimeScore)
            {
               <tr>
                   <td>
                       <p>项目完成用时</p>
                       <p>(每提前30秒得0.5分，不足30秒不加分,填写时间后自动计算)</p>
                   </td>
                   <td>
                       5
                   </td>
                   <td>
                       <span id="timescore">0</span>
                   </td>
                   <td></td>
               </tr>
            }

        </table>
        <div class="row">
            <div class="col-12">
           @Html.DevExpress().MemoFor(m => m.Score.Note, s =>
           {
               s.Properties.Caption = "备注";
             
               s.Width = Unit.Percentage(100);
               s.Properties.Rows = 6;
           }).GetHtml()
            </div>

        </div>
        <div class="row float-right">
            @Html.DevExpress().Button(btnSettings =>
                {
                btnSettings.Name = "btnUpdate";
                btnSettings.Text = "提交";
                btnSettings.UseSubmitBehavior = true;
                // btnSettings.ClientSideEvents.Click = "function(s, e){ ScoreJudgeGridView.UpdateEdit(); }";
                }).GetHtml()
            @Html.DevExpress().Button(btnSettings =>
            {
            btnSettings.Name = "btnCancel";
            btnSettings.Text = "取消";
            btnSettings.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
            btnSettings.ClientSideEvents.Click = "function(s, e){ document.location='" + DevExpressHelper.GetUrl(new { Controller = "Score", Action = "Index" }) + "'; }";
            }).GetHtml()
        </div>
    </div>

@*</form>*@
}
<script>
    watermark("@Model.Score.Judge.StaffId\n @Model.Score.Judge.Name")
    //watermark("@User.Identity.Name")  
 
</script>